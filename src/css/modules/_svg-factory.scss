
/**
 * Author: Kevin Weber
 *
 * Follow me: @kevinweber (https://twitter.com/kevinweber)
 * Website: http://kevinw.de
 *
 * License: CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
 *
 * Code from https://codepen.io/kevinweber/pen/dXWoRw
 */

 // Icons from https://iconsvg.xyz/ & https://tablericons.com/



@function svg-tag($colour) {
    @return'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="' + $colour + '" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7.01" y2="7"></line></svg>';
  }
  $tag-light: svg-tag($flexoki-500);
  $tag-dark: svg-tag($flexoki-paper);

  @function svg-calendar($colour) {
    @return'<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-calendar" width="24" height="24" stroke-width="2" stroke="' + $colour + '" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z" /><path d="M16 3v4" /><path d="M8 3v4" /><path d="M4 11h16" /><path d="M11 15h1" /><path d="M12 15v3" /></svg>';
  }
  $calendar-light: svg-calendar($flexoki-500);
  $calendar-dark: svg-calendar($flexoki-paper);

// Thanks to Hugo Giraudel for his str-replace function (http://www.sassmeister.com/gist/1b4f2da5527830088e4d)
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @if $index {
      @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
  }
  
  
  $encoding-reference: (
    //('%','%25'),  // Encode "%" first, otherwise the "%" from encoded code would be encoded again (which would be bad)
    ('<','%3C'),
    ('>','%3E'),
    //('"','%22'),  // Replace " with ' because that's shorter than %22 and normally working
    ('"','\''),
    ('#','%23'),
    ('&','%26')
  );
  
  @function svg-encode($svg) {
    @each $char, $encoded in $encoding-reference {
      $svg: str-replace($svg, $char, $encoded);
    }
    @return 'data:image/svg+xml,' + $svg;
  }